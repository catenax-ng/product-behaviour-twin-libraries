---
credentials:
  cloud:
    accessKey: &cloudKey <path:behaviour-twin-pilot/data/health-indicator/credentials/cloud#accessKey>
    secretKey: &cloudSecret <path:behaviour-twin-pilot/data/health-indicator/credentials/cloud#secretKey>
  apiwrapper:
    username: &apiwrapperUser <path:behaviour-twin-pilot/data/health-indicator/credentials/apiwrapper#username>
    password: &apiwrapperPass <path:behaviour-twin-pilot/data/health-indicator/credentials/apiwrapper#password>
  api:
    username: &apiUser <path:behaviour-twin-pilot/data/health-indicator/credentials/api#username>
    password: &apiPass <path:behaviour-twin-pilot/data/health-indicator/credentials/api#password>
  rawdata:
    username: &rawdataUser <path:behaviour-twin-pilot/data/health-indicator/credentials/rawdata#username>
    password: &rawdataPass <path:behaviour-twin-pilot/data/health-indicator/credentials/rawdata#password>
  healthindicator:
    username: &hiUser <path:behaviour-twin-pilot/data/health-indicator/credentials/healthindicator#username>
    password: &hiPass <path:behaviour-twin-pilot/data/health-indicator/credentials/healthindicator#password>


oem-hi-app:
  ingress:
    enabled: true
    className: ""
    tls: true
    certManager:
      issuer: ""
      clusterIssuer: ""

    annotations: {}
    hostname: "bmw-hiapp.dev.demo.catena-x.net"
    secret: tls-secret

  server:
    port: &hiPort 25553

  connection:
    endpoints:
      default:
        port: *hiPort
        path: /
        ingress: True

  credentials:
    cloud:
      accessKey: *cloudKey
      secretKey: *cloudSecret
    apiwrapper:
      username: *apiwrapperUser
      password: *apiwrapperPass
    api:
      username: *apiUser
      password: *apiPass
    rawdata:
      username: *rawdataUser
      password: *rawdataPass
    healthindicator:
      username: *hiUser
      password: *hiPass

  configuration:
    properties: |-
      spring.application.name=hibackendservice
      spring.jpa.open-in-view=false
      edc.apiwrapper.submodelPath=api/service
      edc.apiwrapper.submodel=submodel
      edc.apiwrapper.providerEdcUrlKey=provider-connector-url
      cloud.endpoint=https://play.min.io
      cloud.region=eu-west-1
      cloud.bucket=test
      cloud.inputFile.bucketName=testbucket
      cloud.inputFile.key=testfile
      supplier.hiservice.endpoint=https://edc-ocp0900009.apps.c7von4sy.westeurope.aroapp.io/BPNL00000003B2OM
      supplier.bpn=BPNL00000003B2OM
      supplier.hiservice.inputAssetName=urn:uuid:17937c84-000b-4520-9830-ba86934850e3
      edc.bpn=BPNL000000002YWC
      edc.endpoint=https://dlr.dev.demo.catena-x.net
      edc.apiwrapper.url=https://apiw-dlr.dev.demo.catena-x.net
      security.api.role=USER
      security.api.endpoints.hidatareceiver.notifyresult.noauth=true
      rawdatadb.drivername=org.postgresql.Driver
      rawdatadb.show-sql=false
      rawdatadb.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      rawdatadb.hibernate.hbm2ddl.auto=update
      rawdatadb.drivername=org.postgresql.Driver
      rawdatadb.show-sql=false
      rawdatadb.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      rawdatadb.hibernate.hbm2ddl.auto=update
      rawdatadb.url=jdbc:postgresql://rawdatadb/rawdata
      healthindicatordb.url=jdbc:postgresql://healthindicatordb/healthindicator
      spring.config.import=

provider:
  ingress:
    enabled: true
    className: ""
    tls: true
    certManager:
      issuer: ""
      clusterIssuer: ""

    annotations: {}
    hostname: "bmw-provider.dev.demo.catena-x.net"
    secret: tls-secret

  server:
    port: &providerPort 25551

  connection:
    endpoints:
      default:
        port: *providerPort
        path: /
        ingress: True

  credentials:
    cloud:
      accessKey: *cloudKey
      secretKey: *cloudSecret
    apiwrapper:
      username: *apiwrapperUser
      password: *apiwrapperPass
    api:
      username: *apiUser
      password: *apiPass
    rawdata:
      username: *rawdataUser
      password: *rawdataPass
    healthindicator:
      username: *hiUser
      password: *hiPass

  configuration:
    properties: |-
      spring.application.name=dataprovider
      services.dataupdater.endpoint.baseurl=https://bmw-updater.dev.demo.catena-x.net/api/rawdata
      services.dataprovider.testdata.file=testdata.json
      services.dataupdater.endpoint.authenticationActivated=true
      security.api.role=USER
      spring.config.import=

updater:
  ingress:
    enabled: true
    className: ""
    tls: true
    certManager:
      issuer: ""
      clusterIssuer: ""

    annotations: {}
    hostname: "bmw-updater.dev.demo.catena-x.net"
    secret: tls-secret

  server:
    port: &updaterPort 25552

  connection:
    endpoints:
      default:
        port: *updaterPort
        path: /
        ingress: True

  credentials:
    cloud:
      accessKey: *cloudKey
      secretKey: *cloudSecret
    apiwrapper:
      username: *apiwrapperUser
      password: *apiwrapperPass
    api:
      username: *apiUser
      password: *apiPass
    rawdata:
      username: *rawdataUser
      password: *rawdataPass
    healthindicator:
      username: *hiUser
      password: *hiPass

  configuration:
    properties: |-
      spring.application.name=dataupdater
      spring.jpa.open-in-view=false
      security.api.role=USER
      rawdatadb.drivername=org.postgresql.Driver
      rawdatadb.show-sql=false
      rawdatadb.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      rawdatadb.hibernate.hbm2ddl.auto=update
      rawdatadb.drivername=org.postgresql.Driver
      rawdatadb.show-sql=false
      rawdatadb.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      rawdatadb.hibernate.hbm2ddl.auto=update
      rawdatadb.url=jdbc:postgresql://rawdatadb/rawdata
      spring.config.import=


rawdatadb:
  fullnameOverride: "rawdatadb"
  image:
    pullPolicy: Always
  auth:
    database: &psqlDatabase "rawdata"
    username: *rawdataUser
    password: *rawdataPass

  persistence:
    enabled: false

  # initdbUsername: *psqlUsername
  # initdbPassword: *psqlPassword

healthindicatordb:
  fullnameOverride: "healthindicatordb"
  image:
    pullPolicy: Always
  auth:
    database: &psqlDatabase "healthindicator"
    username: *hiUser
    password: *hiPass

  persistence:
    enabled: false

  # initdbUsername: *psqlUsername
  # initdbPassword: *psqlPassword